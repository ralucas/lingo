// Generated by CoffeeScript 1.6.3
(function() {
  var BeGlobal, app, beglobal, express, http, newWord, path, quizResults, routes, user;

  express = require('express');

  routes = require('./../routes');

  user = require('./../routes/user');

  http = require('http');

  path = require('path');

  BeGlobal = require('node-beglobal');

  app = express();

  beglobal = new BeGlobal.BeglobalAPI({
    api_token: 'uLTwm1AjPmzs3Pl68jxO4g%3D%3D'
  });

  app.set('port', process.env.PORT || 3000);

  app.set('views', __dirname + './../views');

  app.set('view engine', 'jade');

  app.use(express.favicon());

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(express["static"](path.join(__dirname, './../public')));

  newWord = {};

  quizResults = [];

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  app.get('/', routes.index);

  app.get('/users', user.list);

  app.get('/translate', function(req, res) {
    return res.render('translate');
  });

  app.post('/translate', function(req, res) {
    newWord = req.body;
    console.log(newWord);
    return beglobal.translations.translate(newWord, function(err, results) {
      if (err) {
        return console.log(err);
      } else {
        return res.send(results);
      }
    });
  });

  app.get('/quiz', function(req, res) {
    return res.render('quiz');
  });

  app.get('/lang', function(req, res) {
    return beglobal.languages.all(function(err, results) {
      if (err) {
        return console.log(err);
      } else {
        return res.send(results);
      }
    });
  });

  app.post('/displayQuiz', function(req, res) {
    var quizWord, quizWords, _i, _len, _ref;
    quizWords = req.body;
    _ref = quizWords['objArr'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      quizWord = _ref[_i];
      console.log(quizWord);
      beglobal.translations.translate(quizWord, function(err, results) {
        if (err) {
          return console.log(err);
        } else {
          quizResults.push(results);
          console.log(quizResults);
        }
      });
    }
    res.send({
      newObj: quizResults
    });
  });

  http.createServer(app).listen(app.get('port'), function() {
    return console.log('Express server listening on port ' + app.get('port'));
  });

}).call(this);
